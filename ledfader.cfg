[delayed_gcode LED_FADE_LOOP]
gcode:
    {% set brightness = printer["gcode_macro LED_FADE"].brightness|float %}
    {% set direction = printer["gcode_macro LED_FADE"].direction|int %}
    {% set step = printer["gcode_macro LED_FADE"].step|float %}
    {% set led = printer["gcode_macro LED_FADE"].led %}
    {% set colors = printer["gcode_macro LED_FADE"].colors.split(",") %}
    {% set sleep = printer["gcode_macro LED_FADE"].sleep|float %}
    {% set brightness_max = printer["gcode_macro LED_FADE"].brightness_max|float %}
    {% set brightness_min = printer["gcode_macro LED_FADE"].brightness_min|float %}
    {% set color_index = printer["gcode_macro LED_FADE"].color_index %} 

    # Adjust brightness
    {% set brightness = brightness + (step * direction) %}

    # Check bounds and switch direction if necessary
    {% if brightness >= brightness_max %}
        {% set brightness = brightness_max %}
        {% set direction = -1 %}
    {% elif brightness <= brightness_min %}
        {% set brightness = brightness_min %}
        {% set direction = 1 %}
        # Move to the next color in the user-provided colors list
    {% endif %}
    #make sure we work within the colors array
    {% set color_index = color_index % (colors|length) %}
    {% set current_combination = colors[color_index].strip() %}
    {% set color_index = color_index + 1 %}
    {% set red = brightness if 'R' in current_combination else 0 %}
    {% set green = brightness if 'G' in current_combination else 0 %}
    {% set blue = brightness if 'B' in current_combination else 0 %}
    {% set white = brightness if 'W' in current_combination else 0 %}

    SET_GCODE_VARIABLE MACRO=LED_FADE VARIABLE=brightness VALUE={brightness}
    SET_GCODE_VARIABLE MACRO=LED_FADE VARIABLE=direction VALUE={direction}
    SET_GCODE_VARIABLE MACRO=LED_FADE VARIABLE=color_index VALUE={color_index}

    # Set LED brightness
    SET_LED LED={led} RED={red} GREEN={green} BLUE={blue} WHITE={white}

    # Schedule the next execution
   UPDATE_DELAYED_GCODE ID=LED_FADE_LOOP DURATION={sleep}

[gcode_macro LED_FADE]
variable_brightness: 0.0
variable_direction: 1
variable_step: 0.1
variable_sleep: 0.1
variable_led: ""
variable_brightness_max: 1.0
variable_brightness_min: 0.0
variable_colors: "RGB"
variable_color_index: 0
gcode:
    M118 Debug: Values before execution: brightness={printer["gcode_macro LED_FADE"].brightness}, direction={printer["gcode_macro LED_FADE"].direction}, step={printer["gcode_macro LED_FADE"].step}, sleep={printer["gcode_macro LED_FADE"].sleep}, brightness_min={printer["gcode_macro LED_FADE"].brightness_min}, brightness_max={printer["gcode_macro LED_FADE"].brightness_max}, led={printer["gcode_macro LED_FADE"].led}, colors={printer["gcode_macro LED_FADE"].colors}, color_index={printer["gcode_macro LED_FADE"].color_index}
    {% if not params.LED %}
        M118 Error: LED parameter is required
    {% else %}
        {% if 'BRIGHTNESS' in params %}
            SET_GCODE_VARIABLE MACRO=LED_FADE VARIABLE=brightness VALUE={params.BRIGHTNESS|float}
        {% endif %}
        {% if 'DIRECTION' in params %}
            SET_GCODE_VARIABLE MACRO=LED_FADE VARIABLE=direction VALUE={params.DIRECTION|int}
        {% endif %}
        {% if 'STEP' in params %}
            SET_GCODE_VARIABLE MACRO=LED_FADE VARIABLE=step VALUE={params.STEP|float}
        {% endif %}
        {% if 'SLEEP' in params %}
            SET_GCODE_VARIABLE MACRO=LED_FADE VARIABLE=sleep VALUE={params.SLEEP|float}
        {% endif %}
        {% if 'BRIGHTNESS_MIN' in params %}
            SET_GCODE_VARIABLE MACRO=LED_FADE VARIABLE=brightness_min VALUE={params.BRIGHTNESS_MIN|float}
        {% endif %}
        {% if 'BRIGHTNESS_MAX' in params %}
            SET_GCODE_VARIABLE MACRO=LED_FADE VARIABLE=brightness_max VALUE={params.BRIGHTNESS_MAX|float}
        {% endif %}
        {% if 'COLORS' in params %}
            SET_GCODE_VARIABLE MACRO=LED_FADE VARIABLE=colors VALUE=\"{params.COLORS.upper()}\"
        {% endif %}

        SET_GCODE_VARIABLE MACRO=LED_FADE VARIABLE=led VALUE=\"{params.LED}\"

        UPDATE_DELAYED_GCODE ID=LED_FADE_LOOP DURATION=0.1
        M118 LED fading started for LED {params.LED}
    {% endif %}
    
[gcode_macro LED_FADE_STOP]
gcode:
    {% if not printer["gcode_macro LED_FADE"].led %}
        M117 Error: No active LED to stop
    {% endif %}

    UPDATE_DELAYED_GCODE ID=LED_FADE_LOOP DURATION=0

    SET_LED LED={printer["gcode_macro LED_FADE"].led} RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.0
    M118 LED fading stopped for LED {printer["gcode_macro LED_FADE"].led}

[gcode_macro LED_FADE_TEST]
gcode:
    LED_FADE LED=mypix step=0 brightness=1 sleep=0.5 colors=rgb,r,g,b,rg,rb,gb,x
